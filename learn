import datetime as dt
import requests

BASE = {
    'Сергей': 'Омск',
    'Соня': 'Москва',
    'Алексей': 'Калининград',
    'Миша': 'Москва',
    'Дима': 'Челябинск',
    'Алина': 'Красноярск',
    'Егор': 'Пермь',
    'Коля': 'Красноярск',
    'Артём': 'Владивосток',
    'Петя': 'Нижний Новгород'
}

UTC_OFFSET = {
    'Москва': 3,
    'Нижний Новгород': 3,
    'Челябинск': 5,
    'Омск': 6,
    'Красноярск': 7,
    'Пермь': 5,
    'Калининград': 2,
    'Владивосток': 10
}

def what_time(city):
    offset = UTC_OFFSET[city]
    city_time = dt.datetime.utcnow() + dt.timedelta(hours=offset)
    f_time = city_time.strftime("%H:%M")
    return f_time
def what_weather(city):
    url = f'http://wttr.in/{city}'
    weather_parameters = {
        'format': 2,
        'M': ''
    }
    try:
        response = requests.get(url, params=weather_parameters)
    except requests.ConnectionError:
        return '<сетевая ошибка>'
    if response.status_code == 200:
        return response.text.strip()
    else:
        return '<ошибка на сервере погоды>'

def process_friend(name, query):
    if name in BASE:
        city = BASE[name]
        if query == 'ты где?':
            return f'{name} в городе {city}'
        elif query == 'как погода?':
            what_weather(city)
            
        elif query == 'который час?':
            if city not in UTC_OFFSET:
                return f'<не могу определить время в городе {city}>'
            time = what_time(city)
            return f'Там сейчас {time}'
        else:
            return '<неизвестный запрос>'
    else:
        return f'У тебя нет друга по имени {name}'
    return what_weather(city)
def process_query(query):
    tokens = query.split(', ')
    name = tokens[0]
    return process_friend(name, tokens[1])
def runner():
    queries = [
        'Коля, ты где?',
        'Антон, ты где?',
        'Алексей, который час?',
        'Артём, который час?',
        'Антон, который час?',
        'Петя, который час?',
        'Коля, как погода?',
        'Соня, как погода?',
    ]
    for query in queries:
        print(query, '-', process_query(query))
runner()
